version: '3.8'
services:
  # These are the configurations for our Node app
  # When Docker Compose starts this container it will automatically
  # use the Dockerfile in the directory to configure it
  micro-research-app:
    build: .
    working_dir: /src
    depends_on:
      # Our app does not work without our database
      # so this ensures our database is loaded first
      - micro-research-db
    ports:
      - "8080:8080"
    volumes:
      # Maps our current project directory `.` to
      # our working directory in the container
      - ./:/src

  # This is the configuration for our PostgreSQL database container
  # Note the `postgres` name is important, in out Node app when we refer
  # to  `host: "postgres"` that value is mapped on the network to the
  # address of this container.
  micro-research-db:
    image: postgres:15.2-alpine
    restart: always
    env_file:
      - .env.prod
    ports:
      - "5432:5432"
#    volumes:
      # When the PostgresSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory, this connects
      # our seed file to that directory so that it gets run
      # - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql
